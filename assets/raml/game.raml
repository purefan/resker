#%RAML 1.0 Library
usage: These types relate to a Game.
uses:
  collection: collection.raml
types:
  game_to_db:
    description: The API request that inserts a game in the database
    type: object
    properties:
      white_player_name: string
      white_player_elo:
        type: integer
      game_result:
        required: true
        type: game_result
      black_player_name: string
      black_player_elo: integer
      moves: game_move[]
      event: string
      round: number
      raw: string
      game_date: game_date

  game_from_db:
    description: The query parameters for the API request
    type: object
    properties:
      white_player_name:
        type: string
        required: false
        description: ObjectId generated by mongo
      white_player_elo:
        type: integer
        required: false
      game_result:
        required: false
        type: game_result
      black_player_name:
        type: string
        required: false
      black_player_elo:
        type: integer
        required: false
      event:
        type: string
        required: false
      round:
        type: number
        required: false
      game_date_start:
        type: game_date
        required: false
      game_date_end:
        type: game_date
        required: false
        description: if present it implies an AND condition with game_date_start, forming a range of inclusive dates.
      players_relation:
        required: false
        enum:
          - OR
          - AND
        default: 'OR'
      last_game_id:
        description: Every page has maximum 50 items. Instead of doing "pages", we get the next batch after the game id
        type: string
        required: false

  game_result:
    description: How the game ended. "1-1" Means either one wins. "1/0" Means "white wins or is a draw". "0/1" means black wins or is a draw"
    enum:
      - 1-0
      - 0-1
      - 1/2
      - 1-1
      - 1/0
      - 0/1
      - "*"
  game_move:
    type: object
    description: Represents a single move in a game
    properties:
      fen:
        type: string
        description: FEN after making the move.
      san: string
      half_move:
        type: integer
        required: true
      time_used?:
        description: Seconds that it took to make this move
        type: integer

  game_date:
    type: number
    description: unix timestamp

  game_search:
    description: Params sent when searching for games
    type: object
    properties:
      any_player_id?: string